<UserControl
	x:Class="Anilibria.Pages.Releases.ReleasesView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:Anilibria.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewmodel="using:Anilibria.Pages.Releases"
	xmlns:converters="using:Anilibria.Converters"
	mc:Ignorable="d"
	d:DesignHeight="300"
	d:DesignWidth="400"
	d:DataContext="{d:DesignInstance viewmodel:ReleasesViewModel}"
	Loaded="UserControl_Loaded"
	x:Name="ReleasesContainer">

	<UserControl.Resources>
		<CollectionViewSource
			x:Name="GroupedReleasesSource"
			x:Key="GroupedReleasesSource"
			Source="{Binding GroupingCollection}"
			IsSourceGrouped="True"
		/>
		<Style x:Key="GroupedHeaderStyle" TargetType="GridViewHeaderItem">
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{ThemeResource GridViewHeaderItemThemeFontSize}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Margin" Value="0,0,0,4"/>
			<Setter Property="Padding" Value="12,8,12,0"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="MinHeight" Value="{ThemeResource GridViewHeaderItemMinHeight}"/>
			<Setter Property="UseSystemFocusVisuals" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GridViewHeaderItem">
						<StackPanel
							BorderBrush="Green"
							BorderThickness="0"
							Background="{TemplateBinding Background}">
							<ContentPresenter
								x:Name="ContentPresenter"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								Content="{TemplateBinding Content}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="ReleaseItemTemplate">
			<Border CornerRadius="8">
				<Grid
					Padding="10"
					Background="#f2f2f2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"></ColumnDefinition>
						<ColumnDefinition></ColumnDefinition>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition></RowDefinition>
					</Grid.RowDefinitions>

					<Border
						Height="300"
						Width="200"
						Grid.Row="0"
						Grid.Column="0"
						BorderBrush="#adadad"
						BorderThickness="2"
						CornerRadius="5">
						<Border.Background>
							<ImageBrush
								Stretch="UniformToFill"
								converters:CacheImageBrushConverter.ImageId="{Binding Id}"
								converters:CacheImageBrushConverter.ImageGroup="Poster"
								converters:CacheImageBrushConverter.ImagePath="{Binding Poster}"
							/>
						</Border.Background>
					</Border>

					<Grid
						Grid.Column="1"
						Grid.Row="0"
						Margin="3"
						MaxWidth="230"
						VerticalAlignment="Stretch"
						Padding="0">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<StackPanel
							Grid.Row="0"
							Orientation="Vertical">
							<TextBlock
								TextWrapping="Wrap"
								TextTrimming="CharacterEllipsis"
								MaxLines="3"
								Foreground="#b32121"
								Text="{Binding Title}"
							/>
							<StackPanel Orientation="Vertical">
								<TextBlock Foreground="Black">
									<Run
										Text="Статус"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding Status}"
									/>
								</TextBlock>
							</StackPanel>
							<StackPanel
								Orientation="Vertical"
								Visibility="{Binding IsExistsScheduledOnDay}">
								<TextBlock Foreground="Black">
									<Run
										Text="В расписании"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding ScheduledOnDay}"
									/>
								</TextBlock>
							</StackPanel>
							<StackPanel Orientation="Vertical">
								<TextBlock Foreground="Black">
									<Run
										Text="Год"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding Year}"
									/>
								</TextBlock>
							</StackPanel>
							<StackPanel Orientation="Vertical">
								<TextBlock Foreground="Black">
									<Run
										Text="Тип"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding Type}"
									/>
								</TextBlock>
							</StackPanel>
							<StackPanel Orientation="Vertical">
								<TextBlock
									MaxLines="3"
									TextWrapping="WrapWholeWords"
									Foreground="Black">
									<Run
										Text="Жанры"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding Genres}"
									/>
								</TextBlock>
							</StackPanel>
							<StackPanel Orientation="Vertical">
								<TextBlock
								MaxLines="5"
								TextWrapping="WrapWholeWords"
								Foreground="Black">
									<Run
										Text="Озвучка"
										FontWeight="Bold"
									/>
									<Run
										Text="{Binding Voices}"
									/>
								</TextBlock>
							</StackPanel>
						</StackPanel>
						<Grid
							Grid.Row="1"
							VerticalAlignment="Bottom"
							Height="28">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid Grid.Column="0" VerticalAlignment="Center">
								<TextBlock
									Height="20"
									FontFamily="Segoe MDL2 Assets"
									FontSize="18"
									Foreground="Black">
									&#xEB51;
								</TextBlock>
							</Grid>
							<Grid Grid.Column="1" VerticalAlignment="Top">
								<TextBlock
									Height="20"
									Margin="4 0 0 0"
									FontSize="16"
									Text="{Binding Rating}"
									Foreground="Black"
								/>
							</Grid>
							<Grid
								Grid.Column="2"
								VerticalAlignment="Center"
								Visibility="{Binding AddToFavorite}"
								Margin="4 0 0 2">
								<TextBlock
									Height="20"
									FontFamily="Segoe MDL2 Assets"
									FontSize="18"
									Foreground="Black">
									&#xE734;
								</TextBlock>
							</Grid>
						</Grid>
					</Grid>
				</Grid>
			</Border>
		</DataTemplate>
		<Style x:Key="GridViewStyle" TargetType="GridView">
			<Setter Property="ItemTemplate" Value="{StaticResource ReleaseItemTemplate}"/>
			<Setter Property="ItemContainerStyle">
				<Setter.Value>
					<Style TargetType="GridViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="GridViewItem">
									<Grid x:Name="ContentBorder"
										Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}">
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Normal">
													<Storyboard>
														<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="PointerOver">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="BorderRectangle"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="BorderRectangle"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="#b32121" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<PointerDownThemeAnimation TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Selected">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<DoubleAnimation Storyboard.TargetName="BorderRectangle"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="#b32121" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="PointerOverSelected">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<DoubleAnimation Storyboard.TargetName="BorderRectangle"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="#cf2525" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="PressedSelected">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"
														/>
														<DoubleAnimation Storyboard.TargetName="BorderRectangle"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"
														/>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="LightGray" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Background">
															<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
														</ObjectAnimationUsingKeyFrames>
														<PointerDownThemeAnimation TargetName="ContentPresenter" />
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="DisabledStates">
												<VisualState x:Name="Enabled"/>
												<VisualState x:Name="Disabled">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="ContentBorder"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="{ThemeResource ListViewItemDisabledThemeOpacity}"
														/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="FocusStates">
												<VisualState x:Name="Unfocused"/>
												<VisualState x:Name="Focused">
													<Storyboard>
														<DoubleAnimation 
															Storyboard.TargetName="FocusVisualWhite"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"
														/>
														<DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1"
														/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="MultiSelectStates">
												<VisualState x:Name="MultiSelectDisabled">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
															<DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
														</ObjectAnimationUsingKeyFrames>
														<FadeOutThemeAnimation TargetName="MultiSelectSquare"/>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="MultiSelectEnabled">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
														</ObjectAnimationUsingKeyFrames>
														<FadeInThemeAnimation TargetName="MultiSelectSquare"/>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="DataVirtualizationStates">
												<VisualState x:Name="DataAvailable"/>
												<VisualState x:Name="DataPlaceholder">
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
														</ObjectAnimationUsingKeyFrames>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
															<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
											<VisualStateGroup x:Name="ReorderHintStates">
												<VisualState x:Name="NoReorderHint"/>
												<VisualState x:Name="BottomReorderHint">
													<Storyboard>
														<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Bottom" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="TopReorderHint">
													<Storyboard>
														<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Top" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="RightReorderHint">
													<Storyboard>
														<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Right" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="LeftReorderHint">
													<Storyboard>
														<DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Left" />
													</Storyboard>
												</VisualState>
												<VisualStateGroup.Transitions>
													<VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
												</VisualStateGroup.Transitions>
											</VisualStateGroup>
											<VisualStateGroup x:Name="DragStates">
												<VisualState x:Name="NotDragging" />
												<VisualState x:Name="Dragging">
													<Storyboard>
														<DoubleAnimation 
															Storyboard.TargetName="ContentBorder"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="{ThemeResource ListViewItemDragThemeOpacity}" 
														/>
														<DragItemThemeAnimation TargetName="ContentBorder" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="DraggingTarget">
													<Storyboard>
														<DropTargetItemThemeAnimation TargetName="ContentBorder" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="MultipleDraggingPrimary">
													<Storyboard>
														<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1" 
														/>
														<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="1" 
														/>
														<DoubleAnimation Storyboard.TargetName="ContentBorder"
															Storyboard.TargetProperty="Opacity"
															Duration="0"
															To="{ThemeResource ListViewItemDragThemeOpacity}" 
														/>
														<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
														<FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
														<DragItemThemeAnimation TargetName="ContentBorder" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="MultipleDraggingSecondary">
													<Storyboard>
														<FadeOutThemeAnimation TargetName="ContentBorder" />
													</Storyboard>
												</VisualState>
												<VisualState x:Name="DraggedPlaceholder">
													<Storyboard>
														<FadeOutThemeAnimation TargetName="ContentBorder" />
													</Storyboard>
												</VisualState>
												<VisualStateGroup.Transitions>
													<VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
												</VisualStateGroup.Transitions>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<ContentPresenter x:Name="ContentPresenter"
											ContentTransitions="{TemplateBinding ContentTransitions}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Margin="{TemplateBinding Padding}" />
										<TextBlock x:Name="PlaceholderTextBlock"
											Visibility="Collapsed"
											Text="Xg"
											Foreground="{x:Null}"
											Margin="{TemplateBinding Padding}"
											IsHitTestVisible="False"
											AutomationProperties.AccessibilityView="Raw"/>
										<Rectangle x:Name="PlaceholderRect"
											Visibility="Collapsed"
											Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
										/>
										<Rectangle x:Name="MultiArrangeOverlayBackground"
											IsHitTestVisible="False"
											Opacity="0"
											Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
											Grid.ColumnSpan="2"/>
										<Rectangle x:Name="BorderRectangle"
											IsHitTestVisible="False"
											Stroke="{ThemeResource SystemControlHighlightListAccentLowBrush}"
											StrokeThickness="2"
											Opacity="0"
										/>
										<Border x:Name="MultiSelectSquare"
											Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
											Width="20"
											Height="20"
											Margin="0,0,12,12"
											VerticalAlignment="Bottom"
											HorizontalAlignment="Right"
											Visibility="Collapsed">
											<FontIcon x:Name="MultiSelectCheck"
												FontFamily="{ThemeResource SymbolThemeFontFamily}"
												Glyph="&#xE73E;"
												FontSize="16"
												Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
												Opacity="0"
											/>
										</Border>
										<Rectangle x:Name="FocusVisualWhite"
											IsHitTestVisible="False"
											Stroke="{ThemeResource SystemControlForegroundAltHighBrush}"
											StrokeEndLineCap="Square"
											StrokeDashArray="1.0, 1.0"
											StrokeDashOffset="1.5"
											StrokeThickness="2"
											Opacity="0"
										/>
										<Rectangle x:Name="FocusVisualBlack"
											IsHitTestVisible="False"
											Stroke="{ThemeResource SystemControlForegroundBaseHighBrush}"
											StrokeEndLineCap="Square"
											StrokeDashArray="1.0, 1.0"
											StrokeDashOffset="0.5"
											StrokeThickness="2"
											Opacity="0"
										/>
										<TextBlock x:Name="MultiArrangeOverlayText"
											Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
											Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
											FontFamily="{ThemeResource ContentControlThemeFontFamily}"
											FontSize="26.667"
											IsHitTestVisible="False"
											Opacity="0"
											TextWrapping="Wrap"
											TextTrimming="WordEllipsis"
											Margin="18,9,0,0"
											AutomationProperties.AccessibilityView="Raw"
											Grid.ColumnSpan="2"
										/>
									</Grid>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<ItemsWrapGrid Orientation="Horizontal" HorizontalAlignment="Center" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

	<UserControl.Triggers>
		<EventTrigger>
			<BeginStoryboard>
				<Storyboard RepeatBehavior="Forever">
					<ColorAnimation
						Storyboard.TargetName="FilterFilledEllipse"
						Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
						AutoReverse="True"
						From="#2e6c85" To="#4ca2c2" Duration="0:0:1" />
					<DoubleAnimation
						Storyboard.TargetName="FilterFilledEllipseScale"
						Storyboard.TargetProperty="ScaleX"
						AutoReverse="True"
						From=".7" To="1" Duration="0:0:1"/>
					<DoubleAnimation
						Storyboard.TargetName="FilterFilledEllipseScale"
						Storyboard.TargetProperty="ScaleY"
						AutoReverse="True"
						From=".7" To="1" Duration="0:0:1"/>
				</Storyboard>
			</BeginStoryboard>
		</EventTrigger>
	</UserControl.Triggers>
	
	<Grid
		Background="#e6e6e6">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Border
			Grid.Row="0"
			Grid.Column="0"
			Background="#ba2d2d"
			Width="44">
			<Button
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Style="{StaticResource IconsButtonStyle}"
					Command="{Binding ShowSidebarCommand}">
				<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/hambergermenu.svg"
					/>
			</Button>
		</Border>
		<Border
			Grid.Row="1"
			Grid.RowSpan="2"
			Grid.Column="0"
			Background="#9e2323"
			Width="44">
			<RelativePanel
				HorizontalAlignment="Stretch">
				<Button
					x:Name="RefreshButton"
					RelativePanel.AlignTopWithPanel="True"
					Style="{StaticResource IconsButtonStyle}"
					Command="{Binding RefreshCommand}"
					ToolTipService.ToolTip="Выполнить синхронизацию релизов">
					<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/refresh.svg"
					/>
				</Button>
				<Button
					x:Name="FavoritesButton"
					RelativePanel.Below="RefreshButton"
					Style="{StaticResource IconsButtonStyle}"
					ToolTipService.ToolTip="Чтобы добавить в избранное необходимо перевести список релизов в множественный режим посредством переключателя расположенного выше списка">
					<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/favorite.svg"
					/>
					<Button.Flyout>
						<MenuFlyout>
							<MenuFlyout.MenuFlyoutPresenterStyle>
								<Style TargetType="MenuFlyoutPresenter">
									<Setter Property="Background" Value="#e6e6e6" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="BorderBrush" Value="#f0f0f0" />
								</Style>
							</MenuFlyout.MenuFlyoutPresenterStyle>
							<MenuFlyoutItem
								Style="{StaticResource AnilibriaMenuFlyoutItem}"
								Text="Добавить в избранное"
								Command="{Binding AddToFavoritesCommand}"
							/>
							<MenuFlyoutItem
								Style="{StaticResource AnilibriaMenuFlyoutItem}"
								Text="Удалить из избранного"
								Command="{Binding RemoveFromFavoritesCommand}"
							/>
							<MenuFlyoutItem
								Style="{StaticResource AnilibriaMenuFlyoutItem}"
								Text="Добавить в локальное избранное"
								Command="{Binding AddToLocalFavoritesCommand}"
							/>
							<MenuFlyoutItem
								Style="{StaticResource AnilibriaMenuFlyoutItem}"
								Text="Удалить из локального избранного"
								Command="{Binding RemoveFromLocalFavoritesCommand}"
							/>
						</MenuFlyout>
					</Button.Flyout>
				</Button>
				<Grid
					x:Name="FilterButton"
					RelativePanel.Below="FavoritesButton">
					<Button
						Style="{StaticResource IconsButtonStyle}">
						<Image
							Width="{StaticResource IconSize}"
							Height="{StaticResource IconSize}"
							Source="/Assets/Icons/search.svg"
						/>
						<Button.Flyout>
							<Flyout>
								<Flyout.FlyoutPresenterStyle>
									<Style TargetType="FlyoutPresenter">
										<Setter Property="Background" Value="#e6e6e6" />
										<Setter Property="BorderThickness" Value="1" />
										<Setter Property="BorderBrush" Value="#f0f0f0" />
									</Style>
								</Flyout.FlyoutPresenterStyle>
								<StackPanel HorizontalAlignment="Stretch">
									<Button
										HorizontalAlignment="Stretch"
										Style="{StaticResource ActionButtonStyle}"
										Command="{Binding ClearFiltersCommands}">
										Очистить фильтры
									</Button>
									<TextBlock
										Margin="4 0 4 4"
										Foreground="Black">
										Жанры
									</TextBlock>
									<controls:TimingTextBox
										Style="{StaticResource AnilibriaTextBox}"
										Width="200"
										Margin="4 0 4 4"
										IsSpellCheckEnabled="False"
										Text="{Binding FilterByGenres, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										PlaceholderText="Вводите через запятую"
										TimeoutCommand="{Binding FilterCommand}"
									/>
									<TextBlock
									Margin="4 0 4 4"
									Foreground="Black">
									Года
									</TextBlock>
									<controls:TimingTextBox
									Style="{StaticResource AnilibriaTextBox}"
									Width="200"
									Margin="4 0 4 4"
									IsSpellCheckEnabled="False"
									Text="{Binding FilterByYears, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									PlaceholderText="Вводите через запятую"
									TimeoutCommand="{Binding FilterCommand}"
								/>
									<TextBlock
									Margin="4 0 4 4"
									Foreground="Black">
									Озвучка
									</TextBlock>
									<controls:TimingTextBox
									Style="{StaticResource AnilibriaTextBox}"
									Width="200"
									Margin="4 0 4 4"
									IsSpellCheckEnabled="False"
									Text="{Binding FilterByVoicers, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									PlaceholderText="Вводите через запятую"
									TimeoutCommand="{Binding FilterCommand}"
								/>
									<TextBlock
									Margin="4 0 4 4"
									Foreground="Black">
									Тип
									</TextBlock>
									<controls:TimingTextBox
									Style="{StaticResource AnilibriaTextBox}"
									Width="200"
									Margin="4 0 4 4"
									IsSpellCheckEnabled="False"
									Text="{Binding FilterByType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									TimeoutCommand="{Binding FilterCommand}"
								/>
									<TextBlock
									Margin="4 0 4 4"
									Foreground="Black">
									Статусы
									</TextBlock>
									<controls:TimingTextBox
									Style="{StaticResource AnilibriaTextBox}"
									Width="200"
									Margin="4 0 4 4"
									IsSpellCheckEnabled="False"
									Text="{Binding FilterByStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									PlaceholderText="Вводите через запятую"
									TimeoutCommand="{Binding FilterCommand}"
								/>
								</StackPanel>
							</Flyout>
						</Button.Flyout>
					</Button>
					<Ellipse
						x:Name="FilterFilledEllipse"
						VerticalAlignment="Top"
						HorizontalAlignment="Right"
						Margin="0 8 8 0"
						Fill="#4ca2c2"
						Width="16"
						Height="16"
						IsHitTestVisible="False"
						Visibility="{Binding FilterIsFilled}">
						<Ellipse.RenderTransform>
							<ScaleTransform x:Name="FilterFilledEllipseScale"></ScaleTransform>
						</Ellipse.RenderTransform>
					</Ellipse>
				</Grid>
				<Button
					x:Name="SortingButton"
					RelativePanel.Below="FilterButton"
					Style="{StaticResource IconsButtonStyle}">
					<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/sort.svg"
					/>
					<Button.Flyout>
						<Flyout>
							<Flyout.FlyoutPresenterStyle>
								<Style TargetType="FlyoutPresenter">
									<Setter Property="Background" Value="#e6e6e6" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="BorderBrush" Value="#f0f0f0" />
								</Style>
							</Flyout.FlyoutPresenterStyle>
							<StackPanel>
								<TextBlock
									Margin="0 2 0 2"
									Foreground="Black">
									Сортировать по
								</TextBlock>
								<ComboBox
									Style="{StaticResource AnilibriaComboBox}"
									Width="280"
									SelectedItem="{Binding SelectedSortingItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									ItemsSource="{Binding SortingItems}"
									DisplayMemberPath="Name">
								</ComboBox>
								<TextBlock
									Margin="0 2 0 2"
									Foreground="Black">
									В порядке
								</TextBlock>
								<ComboBox
									Style="{StaticResource AnilibriaComboBox}"
									Width="280"
									SelectedItem="{Binding SelectedSortingDirection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									ItemsSource="{Binding SortingDirections}"
									DisplayMemberPath="Name">
								</ComboBox>
							</StackPanel>
						</Flyout>
					</Button.Flyout>
				</Button>
				<Grid
					x:Name="NotificationButton"
					RelativePanel.Below="SortingButton">
					<Button
						Style="{StaticResource IconsButtonStyle}">
						<Image
							Width="{StaticResource IconSize}"
							Height="{StaticResource IconSize}"
							Source="/Assets/Icons/notification.svg"
						/>
						<Button.Flyout>
							<Flyout>
								<Flyout.FlyoutPresenterStyle>
									<Style TargetType="FlyoutPresenter">
										<Setter Property="Background" Value="#e6e6e6" />
										<Setter Property="BorderThickness" Value="1" />
										<Setter Property="BorderBrush" Value="#f0f0f0" />
									</Style>
								</Flyout.FlyoutPresenterStyle>
								<StackPanel>
									<TextBlock
										Visibility="{Binding IsShowNotification, Converter={StaticResource InverseBoolConverter}}"
										TextAlignment="Center"
										Foreground="Black">
										У Вас нет новых уведомлений
									</TextBlock>
									<Button
										Style="{StaticResource ActionButtonStyle}"
										Visibility="{Binding IsShowNotification}"
										Command="{Binding ResetNotificationCommand}"
										Margin="0 2 0 2">
										Отметить все как просмотренное
									</Button>
									<controls:PointingGridControl
										Tapped="NewReleasesNotificationTapped">
										<Border
											Visibility="{Binding IsNewReleases}"
											Margin="0 2 0 2"
											MinWidth="200"
											BorderBrush="#881919"
											BorderThickness="2"
											Background="White"
											Padding="8">
											<StackPanel Orientation="Horizontal">
												<TextBlock
													Grid.Column="0"
													Width="35"
													TextAlignment="Center"
													Text="{Binding NewReleasesCount}"
													Foreground="Black"
												/>
												<TextBlock
													Grid.Column="1"
													Foreground="Black">
													Новых релизов
												</TextBlock>
											</StackPanel>
										</Border>
									</controls:PointingGridControl>
									<controls:PointingGridControl
										Tapped="NewOnlineSeriesNotificationTapped">
										<Border
											Visibility="{Binding IsNewOnlineSeries}"
											Margin="0 2 0 2"
											MinWidth="200"
											BorderBrush="#881919"
											BorderThickness="2"
											Background="White"
											Padding="8">
											<StackPanel Orientation="Horizontal">
												<TextBlock
													Grid.Column="0"
													Width="35"
													TextAlignment="Center"
													Text="{Binding NewOnlineSeriesCount}"
													Foreground="Black"
												/>
												<TextBlock
													Grid.Column="1"
													Foreground="Black">
													Новых онлайн серий
												</TextBlock>
											</StackPanel>
										</Border>
									</controls:PointingGridControl>
									<controls:PointingGridControl
										Tapped="NewTorrentsNotificationTapped">
										<Border
											Visibility="{Binding IsNewTorrentSeries}"
											Margin="0 2 0 2"
											MinWidth="200"
											BorderBrush="#881919"
											BorderThickness="2"
											Background="White"
											Padding="8">
											<StackPanel Orientation="Horizontal">
												<TextBlock
													Grid.Column="0"
													Width="35"
													TextAlignment="Center"
													Text="{Binding NewTorrentSeriesCount}"
													Foreground="Black"
												/>
												<TextBlock
													Grid.Column="1"
													Foreground="Black">
													Новые торренты
												</TextBlock>
											</StackPanel>
										</Border>
									</controls:PointingGridControl>
								</StackPanel>
							</Flyout>
						</Button.Flyout>
					</Button>
					<Ellipse
						VerticalAlignment="Top"
						HorizontalAlignment="Right"
						Margin="0 8 8 0"
						Fill="#4ca2c2"
						Width="16"
						Height="16"
						IsHitTestVisible="False"
						Visibility="{Binding IsShowNotification}"
					/>
				</Grid>
				<Button
					x:Name="RandomReleaseButton"
					RelativePanel.Below="NotificationButton"
					Style="{StaticResource IconsButtonStyle}"
					Command="{Binding ShowRandomReleaseCommand}"
					ToolTipService.ToolTip="Показать случайный релиз">
					<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/dice.svg"
					/>
				</Button>
				<Button
					x:Name="Settings"
					Style="{StaticResource IconsButtonStyle}"
					RelativePanel.Below="RandomReleaseButton"
					ToolTipService.ToolTip="Настройки">
					<Button.Flyout>
						<Flyout>
							<Flyout.FlyoutPresenterStyle>
								<Style TargetType="FlyoutPresenter">
									<Setter Property="Background" Value="#e6e6e6" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="BorderBrush" Value="#f0f0f0" />
								</Style>
							</Flyout.FlyoutPresenterStyle>
							<StackPanel
								Orientation="Vertical"
								Margin="2 0 2 4">
								<TextBlock
									Foreground="Black">
									Уведомления по избранным
								</TextBlock>
								<ToggleSwitch
									Style="{StaticResource AnilibriaToggleSwitch}"
									Margin="0 4 0 0"
									OnContent="Включены"
									OffContent="Выключены"
									FontSize="12"
									IsOn="{Binding IsFavoriteNotifications, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
								/>
								<TextBlock
									Margin="0 4 0 0"
									Foreground="Black">
									Торрент
								</TextBlock>
								<ComboBox
									Margin="0 4 0 0"
									Style="{StaticResource AnilibriaComboBox}"
									ItemsSource="{Binding TorrentDownloadModes}"
									SelectedItem="{Binding SelectedTorrentDownloadMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									Width="250"
									DisplayMemberPath="Title"
								/>
							</StackPanel>
						</Flyout>
					</Button.Flyout>
					<Image
						Width="{StaticResource IconSize}"
						Height="{StaticResource IconSize}"
						Source="/Assets/Icons/options.svg"
					/>
				</Button>
			</RelativePanel>
		</Border>
		<Border
			Grid.Row="0"
			Grid.Column="1"
			Background="#b3b3b3">
			<RelativePanel
				HorizontalAlignment="Stretch">
				<ToggleSwitch
					Style="{StaticResource AnilibriaToggleSwitch}"
					Margin="8 0 0 0"
					RelativePanel.AlignLeftWithPanel="True"
					RelativePanel.AlignTopWithPanel="True"
					RelativePanel.AlignBottomWithPanel="True"
					HorizontalAlignment="Center"
					OnContent="Множественный"
					OffContent="Одиночный"
					FontSize="12"
					IsOn="{Binding IsMultipleSelect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				</ToggleSwitch>
				<StackPanel
					Visibility="{Binding IsAuthorized}"
					RelativePanel.AlignRightWithPanel="True"
					Orientation="Horizontal"
					HorizontalAlignment="Right">
					<StackPanel Orientation="Vertical">
						<TextBlock
							TextAlignment="Right"
							Foreground="White"
							FontSize="18"
							FontWeight="Bold"
							Text="{Binding UserModel.Login}"
						/>
						<controls:PointingGridControl
							Tapped="SingoutTapped">
							<TextBlock
								Foreground="White"
								FontSize="14"
								TextAlignment="Right">
								Выйти
							</TextBlock>
						</controls:PointingGridControl>
					</StackPanel>
					<Grid>
						<controls:PointingGridControl
							VerticalAlignment="Bottom"
							Margin="3 0 0 2"
							Tapped="SingoutTapped"
							Width="12"
							Height="12">
							<Image
								Source="/Assets/Icons/logout.svg"
								Stretch="Uniform"
								Width="12"
								Height="12"
							/>
						</controls:PointingGridControl>
					</Grid>
					<StackPanel
						Margin="15 0 0 0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center">
						<Ellipse
							Width="34"
							Height="34"
							Grid.Column="0">
							<Ellipse.Fill>
								<ImageBrush
									ImageSource="{Binding UserModel.ImageUrl}"
									Stretch="Uniform"
								/>
							</Ellipse.Fill>
						</Ellipse>
					</StackPanel>
				</StackPanel>
			</RelativePanel>
		</Border>
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			Margin="0 6 0 4">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<StackPanel
				Grid.Column="1"
				Orientation="Horizontal"
				HorizontalAlignment="Center">
				<controls:TimingTextBox
					Style="{StaticResource AnilibriaTextBox}"
					MinWidth="250"
					Width="380"
					Margin="0 -3 4 0"
					VerticalAlignment="Center"
					IsSpellCheckEnabled="False"
					HorizontalAlignment="Center"
					PlaceholderText="Введите название релиза для поиска"
					Text="{Binding FilterByName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					TimeoutCommand="{Binding FilterCommand}"
				/>
				<ComboBox
					Margin="0 -1 0 0"
					RelativePanel.AlignHorizontalCenterWithPanel="True"
					Style="{StaticResource AnilibriaComboBox}"
					ItemsSource="{Binding Sections}"
					SelectedItem="{Binding SelectedSection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					MinWidth="250"
					Width="300"
					DisplayMemberPath="Title"
				/>
			</StackPanel>
		</Grid>
		<controls:BindableGridControl
			Visibility="{Binding GroupedGridVisible, Converter={StaticResource InverseBoolConverter}}"
			Style="{StaticResource GridViewStyle}"
			Grid.Row="2"
			Grid.Column="1"
			ItemsSource="{Binding Collection}"
			MultipleSelectedItems="{Binding SelectedReleases}"
			IsMultipleSelect="{Binding IsMultipleSelect}"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Center"
		/>
		<controls:BindableGridControl
			Visibility="{Binding GroupedGridVisible}"
			Style="{StaticResource GridViewStyle}"
			Grid.Row="2"
			Grid.Column="1"
			ItemsSource="{Binding Source={StaticResource GroupedReleasesSource}}"
			MultipleSelectedItems="{Binding SelectedGroupedReleases}"
			IsMultipleSelect="{Binding IsMultipleSelect}"
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Center">
			<controls:BindableGridControl.GroupStyle>
				<GroupStyle HidesIfEmpty="True" HeaderContainerStyle="{StaticResource GroupedHeaderStyle}">
					<GroupStyle.HeaderTemplate>
						<DataTemplate>
							<StackPanel
								Background="Transparent">
								<TextBlock
									Foreground="Black"
									Text="{Binding Key}"
								/>
							</StackPanel>
						</DataTemplate>
					</GroupStyle.HeaderTemplate>
				</GroupStyle>
			</controls:BindableGridControl.GroupStyle>
		</controls:BindableGridControl>
		<StackPanel
			Orientation="Horizontal"
			VerticalAlignment="Center"
			HorizontalAlignment="Center"
			Grid.Row="2"
			Grid.Column="1"
			Visibility="{Binding EmptyReleases}">
			<TextBlock
				TextAlignment="Center"
				FontSize="20"
				TextWrapping="WrapWholeWords"
				TextTrimming="WordEllipsis"
				FontWeight="Bold"
				Foreground="#b32121">
				Релизы еще не загружены, пожалуйста подождите пока они загрузятся
			</TextBlock>
		</StackPanel>
		<Rectangle
			Fill="Black"
			Opacity=".5"
			Grid.Row="0"
			Grid.RowSpan="3"
			Grid.ColumnSpan="2"
			Visibility="{Binding IsShowReleaseCard}"
			Tapped="Rectangle_Tapped">
		</Rectangle>
		<Border
			Margin="10"
			Grid.Row="1"
			Grid.RowSpan="2"
			Grid.ColumnSpan="2"
			BorderBrush="#881919"
			BorderThickness="0"
			CornerRadius="8"
			MaxWidth="800"
			VerticalAlignment="Center"
			Visibility="{Binding IsShowReleaseCard}">
			<Grid
				Background="#f2f2f2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<StackPanel
					Grid.Row="0"
					Grid.Column="1"
					Margin="2 16 6 0">
					<TextBlock
						Foreground="#a32727"
						Text="{Binding OpenedRelease.Title}"
						TextWrapping="Wrap"
						FontWeight="SemiBold"
					/>
					<StackPanel Orientation="Vertical">
						<TextBlock
							Foreground="Black"
							converters:TextBlockHighlight.HyperLinkHightlight="True">
							<Run
								Text="Статус"
								FontWeight="Bold"
							/>
							<Hyperlink
								Foreground="#a32727">
								<Run
									Text="{Binding OpenedRelease.Status}"
								/>
							</Hyperlink>
						</TextBlock>
					</StackPanel>
					<StackPanel Orientation="Vertical">
						<TextBlock
							Foreground="Black">
							<Run
								Text="Год"
								FontWeight="Bold"
							/>
							<Run
								Text="{Binding OpenedRelease.Year}"
							/>
						</TextBlock>
					</StackPanel>
					<StackPanel Orientation="Vertical">
						<TextBlock
							Foreground="Black">
							<Run
								Text="Тип"
								FontWeight="Bold"
							/>
							<Run
								Text="{Binding OpenedRelease.Type}"
							/>
						</TextBlock>
					</StackPanel>
					<StackPanel Orientation="Vertical">
						<TextBlock
							TextWrapping="WrapWholeWords"
							Foreground="Black">
							<Run
								Text="Жанры"
								FontWeight="Bold"
							/>
							<Run
								Text="{Binding OpenedRelease.Genres}"
							/>
						</TextBlock>
					</StackPanel>
					<StackPanel Orientation="Vertical">
						<TextBlock
							TextWrapping="WrapWholeWords"
							Foreground="Black">
							<Run
								Text="Озвучка"
								FontWeight="Bold"
							/>
							<Run
								Text="{Binding OpenedRelease.Voices}"
							/>
						</TextBlock>
					</StackPanel>
					<TextBlock
						Margin="0 2 0 0"
						TextWrapping="WrapWholeWords"
						TextTrimming="CharacterEllipsis"
						Foreground="#a32727"
						MaxLines="2"
						Visibility="{Binding ShowAnnounce}"
						Text="{Binding OpenedRelease.Announce}"
					/>
					<StackPanel
						Orientation="Vertical"
						Margin="0 2 0 0">
						<ScrollViewer
							x:Name="CardDescription"
							MaxHeight="190">
							<TextBlock
								TextWrapping="WrapWholeWords"
								Foreground="Black"
								Margin="0 0 14 0"
								converters:TextBlockHtmlConverter.HtmlContent="{Binding OpenedRelease.Description}"
								converters:TextBlockHtmlConverter.LinkCommand="{Binding OpenCrossReleaseCommand}"
								converters:TextBlockHighlight.HyperLinkHightlight="True">
							</TextBlock>
						</ScrollViewer>
					</StackPanel>
				</StackPanel>
				<StackPanel
					Grid.Row="0"
					Grid.Column="2"
					Orientation="Vertical"
					Margin="4 16 16 0">
					<controls:PointingGridControl
								x:Name="CloseButton"
								Width="20"
								Height="20"
								Margin="4 0 1 8"
								Tapped="Rectangle_Tapped"
								ToolTipService.ToolTip="Закрыть карточку">
						<Image
									Source="/Assets/Icons/close.svg"
									Stretch="Uniform"
									Width="20"
									Height="20"
								/>
					</controls:PointingGridControl>
					<Grid Visibility="{Binding IsAuthorized}">
						<controls:PointingGridControl
									Width="20"
									Height="20"
									Margin="4 2 1 8"
									Visibility="{Binding OpenedReleaseInFavorite, Converter={StaticResource InverseBoolConverter}}"
									Tapped="PointingGridControl_Tapped"
									ToolTipService.ToolTip="Добавить в избранное">
							<Image
										Source="/Assets/Icons/favoriteblack.svg"
										Stretch="Uniform"
										Width="20"
										Height="20"
									/>
						</controls:PointingGridControl>
						<controls:PointingGridControl
									Width="20"
									Height="20"
									Margin="4 2 1 8"
									x:Name="RemoveFavoriteButton"
									Visibility="{Binding OpenedReleaseInFavorite}"
									Tapped="RemoveFavoriteButton_Tapped"
									ToolTipService.ToolTip="Удалить из избранного">
							<Image
										Source="/Assets/Icons/removefavorite.svg"
										Stretch="Uniform"
										Width="20"
										Height="20"
									/>
						</controls:PointingGridControl>
					</Grid>
					<controls:PointingGridControl
									Width="20"
									Height="20"
									Margin="4 2 1 8"
									x:Name="ShowComments"
									Tapped="ShowComments_Tapped"
									ToolTipService.ToolTip="Открыть коментарии">
						<Image
										Source="/Assets/Icons/chat.svg"
										Stretch="Uniform"
										Width="20"
										Height="20"
									/>
					</controls:PointingGridControl>
				</StackPanel>
				<Grid
					Grid.Row="0"
					Grid.Column="0"
					Margin="0 16 6 0"
					HorizontalAlignment="Stretch">
					<StackPanel
						Orientation="Horizontal"
						VerticalAlignment="Top"
						HorizontalAlignment="Center">
						<Border
							x:Name="CardPosterBorder"
							Margin="16 0 16 0"
							BorderBrush="#adadad"
							BorderThickness="2"
							CornerRadius="8"
							HorizontalAlignment="Stretch"
							Height="300"
							Width="200">
							<Border.Background>
								<ImageBrush
									Stretch="UniformToFill"
									converters:CacheImageBrushConverter.ImageId="{Binding OpenedRelease.Id}"
									converters:CacheImageBrushConverter.ImageGroup="Poster"
									converters:CacheImageBrushConverter.ImagePath="{Binding OpenedRelease.Poster}"
								/>
							</Border.Background>
						</Border>
					</StackPanel>
				</Grid>
				<Grid
					Grid.Row="1"
					Grid.ColumnSpan="2"
					Padding="4"
					Margin="0 0 0 10"
					Visibility="{Binding IsShowComments, Converter={StaticResource InverseBoolConverter}}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.6*" />
						<ColumnDefinition Width="0.4*" />
					</Grid.ColumnDefinitions>
					<StackPanel
						Grid.Column="1"
						Orientation="Vertical">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBlock
								VerticalAlignment="Center"
								HorizontalAlignment="Right"
								Margin="0 0 20 0"
								Foreground="Black">
								<Run>Доступно</Run>
								<Run Text="{Binding OpenedRelease.CountVideoOnline}" />
								<Run>видео</Run>
							</TextBlock>
							<Button
								HorizontalAlignment="Right"
								Grid.Column="1"
								Command="{Binding OpenOnlineVideoCommand}"
								Style="{StaticResource ActionButtonStyle}">
								Смотреть
							</Button>
						</Grid>
					</StackPanel>
					<StackPanel
						Grid.Column="0">
						<ScrollViewer MaxHeight="50">
							<ItemsControl
								Margin="18 0 0 0"
								ItemsSource="{Binding OpenedRelease.Torrents}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>

								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition />
												<ColumnDefinition  Width="Auto" />
											</Grid.ColumnDefinitions>
											<TextBlock
												Foreground="Black"
												VerticalAlignment="Center">
												<Run Text="{Binding Series}"></Run>
												<Run Text="{Binding Quality}"></Run>
												<Run Text="{Binding Size}"></Run>
											</TextBlock>
											<Button
												Grid.Column="2" Margin="0 1 18 1"
												Command="{Binding DataContext.OpenTorrentCommand, ElementName=ReleasesContainer}"
												CommandParameter="{Binding Url}"
												Style="{StaticResource ActionButtonStyle}"
												HorizontalAlignment="Right">
												Скачать
											</Button>
										</Grid>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</ScrollViewer>
					</StackPanel>
				</Grid>
				<Grid
					Grid.Row="1"
					Grid.ColumnSpan="2"
					Visibility="{Binding IsShowComments}"
					Margin="4">
					<Button
						Style="{StaticResource ActionButtonStyle}"
						HorizontalAlignment="Center"
						Command="{Binding CloseCommentsCommand}">
						Скрыть Комментарии
					</Button>
				</Grid>
				<WebView
					x:Name="CommentsWebView"
					Grid.ColumnSpan="3"
					Grid.RowSpan="1"
					NewWindowRequested="WebView_NewWindowRequested"
					NavigationCompleted="CommentsWebView_NavigationCompleted"
					Visibility="{Binding IsShowComments}"
					Source="{Binding CommentsUri}"
				/>
			</Grid>
		</Border>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<!--<VisualState x:Name="ExtraWide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1800" MinWindowHeight="1200" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CardDescription.Height" Value="400" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Wide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1400" MinWindowHeight="720" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CardDescription.Height" Value="310" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Square">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="720" MinWindowHeight="440" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CardDescription.Height" Value="190" />
					</VisualState.Setters>
				</VisualState>-->
				<!--<VisualState x:Name="Snapped">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" MinWindowHeight="0"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CardPosterBorder.Height" Value="250" />
					</VisualState.Setters>
				</VisualState>-->
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</UserControl>
